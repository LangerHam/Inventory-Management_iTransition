@model Inventory_Management_iTransition.ViewModel.ItemFormViewModel
@{
    ViewBag.Title = "Create New Item";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4>Add New Item to @Model.InventoryTitle</h4>
                </div>
                <div class="card-body">
                    <p>Fill out the details for your new item below.</p>
                    <hr />

                    @using (Html.BeginForm("Create", "Item", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.InventoryId)

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        for (int i = 0; i < Model.FieldValues.Count; i++)
                        {
                            <div class="form-group mb-3">
                                @Html.LabelFor(m => m.FieldValues[i].Value, Model.FieldValues[i].FieldName, new { @class = "form-label" })
                                @Html.HiddenFor(m => m.FieldValues[i].CustomFieldId)
                                @Html.HiddenFor(m => m.FieldValues[i].FieldName)
                                @Html.HiddenFor(m => m.FieldValues[i].FieldType)

                                @switch (Model.FieldValues[i].FieldType)
                                {
                                    case Inventory_Management_iTransition.Models.FieldType.MultiLineText:
                                        @Html.TextAreaFor(m => m.FieldValues[i].Value, 5, 1, new { @class = "form-control" })
                                        break;
                                    case Inventory_Management_iTransition.Models.FieldType.Checkbox:
                                        <div class="form-check pt-2">
                                            @Html.CheckBox(string.Format("FieldValues[{0}].Value", i), false, new { @class = "form-check-input", value = "true" })
                                            <input type="hidden" name="@string.Format("FieldValues[{0}].Value", i)" value="false" />
                                        </div>
                                        break;
                                    case Inventory_Management_iTransition.Models.FieldType.Numeric:
                                        @Html.TextBoxFor(m => m.FieldValues[i].Value, new { @class = "form-control", type = "number" })
                                        break;
                                    case Inventory_Management_iTransition.Models.FieldType.DocumentLink:
                                        @Html.TextBoxFor(m => m.FieldValues[i].Value, new { @class = "form-control", type = "url" })
                                        break;
                                    default: 
                                        @Html.TextBoxFor(m => m.FieldValues[i].Value, new { @class = "form-control" })
                                        break;
                                }
                                @Html.ValidationMessageFor(m => m.FieldValues[i].Value, "", new { @class = "text-danger" })
                            </div>
                        }

                        <hr />
                        <div class="d-flex justify-content-end">
                            @Html.ActionLink("Cancel", "Details", "Inventory", new { id = Model.InventoryId }, new { @class = "btn btn-secondary me-2" })
                            <input type="submit" value="Create Item" class="btn btn-primary" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
